// CLEARFIX
=clearfix()
  &:before,
  &:after
    content: ''
    display: table
  &:after
    clear: both

// PSEUDO ELEMENT
=pseudo()
  content: ''
  position: absolute
  top: 0
  right: 0
  bottom: 0
  left: 0

// ANIMATION
=animation($str)
  animation: #{$str}

// BORDER RADIUS
=border-radius($radius, $important: '')
  border-radius: $radius#{$important}

// BOX SHADOW
=prefixer($property, $value, $prefixes: webkit moz ms o)
  @each $prefix in $prefixes
    #{"-" + $prefix + "-" + $property}: $value

  #{$property}: $value

=box-shadow($properties...)
  @include prefixer(box-shadow, $properties)

// FONT SIZE
@function calculateRem($size)
  $remSize: $size / 16px
  @return $remSize * 1rem

=font-size($size)
  font-size: $size
  font-size: calculateRem($size)

// KEYFRAMES
=keyframes($animation-name)
  @-webkit-keyframes #{$animation-name}
    @content
  @-moz-keyframes #{$animation-name}
    @content
  @-ms-keyframes #{$animation-name}
    @content
  @-o-keyframes #{$animation-name}
    @content
  @keyframes #{$animation-name}
    @content

// MEDIA QUERIES
=mq($constraint, $viewport1, $viewport2: null)
  @if $constraint == $min
    @media screen and ($min: $viewport1)
      @content
  @else if $constraint == $max
    @media screen and ($max: $viewport1)
      @content
  @else
    @media screen and ($min: $viewport1) and ($max: $viewport2)
      @content

// OMEGA RESET
=omega-reset($nth)
  &:nth-child(#{$nth})
    margin-right: 0
  &:nth-child(#{$nth}+1)
    clear: none

// OPACITY
=opacity($value, $important: '')
  opacity: $value #{$important}
  filter: alpha(opacity=#{$value * 100}) #{$important}

// LINEAR GRADIENT
=linear-gradient($angle, $from, $to)
  background-color: $from
  background-image: linear-gradient($angle, $from, $to)
  filter: progid:DXImageTransform.Microsoft.gradient(GradientType=$angle,StartColorStr='#{$from}', EndColorStr='#{$to}')

// ROTATE
=rotate($deg)
  transform: rotate($deg)

// SIZE
=size($width, $height: $width)
  width: $width
  height: $height

// TEXT OVERFLOW
=text-overflow($lineHeight, $lineCount)
  -webkit-line-clamp: $lineCount
  -webkit-box-orient: vertical
  display: block
  display: -webkit-box
  height: $lineHeight * $lineCount
  line-height: $lineHeight
  overflow: hidden
  text-overflow: ellipsis

// TEXT SHADOW
=text-shadow($args...)
  text-shadow: $args

// TRANSFORM
=transform($transforms)
  transform: $transforms

// TRANSITIONS
=transition($args...)
  transition: $args

// PARALLAX
=parallax-init($perspective: $parallax-perspective, $element: $parallax-element, $parallax-ios: $parallax-ios)
  @if $element == 'body'
    html,
    body
      +pad(0)
      +size(100%)
      margin: 0
      overflow: hidden

  #{$element}
    overflow: auto
    perspective: $perspective * 1px
    transform-style: preserve-3d

    @if $parallax-ios == false
      -webkit-overflow-scrolling: touch

    &,
    *
      transform-style: preserve-3d

=parallax($distance: 0, $perspective: $parallax-perspective)
  +transform(translateZ($distance * $perspective * 1px) scale(abs($distance - 1)))
  z-index: $distance * 1000
